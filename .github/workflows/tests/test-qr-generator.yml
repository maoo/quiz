name: Test QR Generator

on:
  push:
    paths:
      - 'src/qr_generator/**'
      - 'tests/test_qr_generator.py'
      - 'pyproject.toml'
      - 'poetry.lock'
  pull_request:
    paths:
      - 'src/qr_generator/**'
      - 'tests/test_qr_generator.py'
      - 'pyproject.toml'
      - 'poetry.lock'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          
      - name: Configure Poetry
        run: |
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true
          
      - name: Cache Poetry virtualenv
        uses: actions/cache@v3
        id: cache
        with:
          path: ./.venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
          
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: poetry install --no-interaction
        
      - name: Run tests
        run: |
          poetry run pytest tests/test_qr_generator.py -v --cov=src/qr_generator --cov-report=xml
          
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: qr-generator
          name: codecov-qr-generator
          fail_ci_if_error: true 