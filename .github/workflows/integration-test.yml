name: Integration Test

on:
  push:
    paths:
      - 'src/**'
      - 'tests/**'
      - 'decks/**'
      - '.github/workflows/integration-test.yml'
  pull_request:
    paths:
      - 'src/**'
      - 'tests/**'
      - 'decks/**'
      - '.github/workflows/integration-test.yml'
  workflow_dispatch:  # Allow manual triggering

jobs:
  integration-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true
          
      - name: Install dependencies
        run: |
          poetry install
          
      - name: Create test output directory
        run: |
          mkdir -p /tmp/integration-test/output
          
      - name: Generate SVGs for all questions
        run: |
          for question_file in decks/**/*.md; do
            if [ -f "$question_file" ]; then
              filename=$(basename "$question_file" .md)
              poetry run python -m src.svg_generator.generator "$question_file" "/tmp/integration-test/output/${filename}.svg"
            fi
          done
          
      - name: Verify SVGs were created
        run: |
          # Check if any SVGs were generated
          if [ ! "$(ls -A /tmp/integration-test/output/*.svg 2>/dev/null)" ]; then
            echo "No SVG files were generated!"
            exit 1
          fi
          
          # Check SVG contents
          for svg_file in /tmp/integration-test/output/*.svg; do
            # Verify SVG contains question text
            if ! grep -q "text" "$svg_file"; then
              echo "SVG file $svg_file does not contain text elements!"
              exit 1
            fi
            
            # Verify SVG contains QR code if present in original markdown
            original_md=$(basename "$svg_file" .svg).md
            if grep -q "qr:" "decks/$original_md" && ! grep -q "image" "$svg_file"; then
              echo "SVG file $svg_file should contain QR code but doesn't!"
              exit 1
            fi
          done
          
      - name: Convert SVGs to PDFs
        run: |
          poetry run python -m src.svg_to_pdf.converter /tmp/integration-test/output -o /tmp/integration-test/output
          
      - name: Verify PDFs were created
        run: |
          # Check if any PDFs were generated
          if [ ! "$(ls -A /tmp/integration-test/output/*.pdf 2>/dev/null)" ]; then
            echo "No PDF files were generated!"
            exit 1
          fi
          
          # Check PDF sizes and contents
          for pdf_file in /tmp/integration-test/output/*.pdf; do
            # Check PDF size is reasonable (more than 1KB)
            FILE_SIZE=$(du -k "$pdf_file" | cut -f1)
            if [ "$FILE_SIZE" -lt 1 ]; then
              echo "PDF file $pdf_file is too small (likely empty)"
              exit 1
            fi
            
            # Verify PDF contains text (using pdftotext)
            if ! command -v pdftotext &> /dev/null; then
              apt-get update && apt-get install -y poppler-utils
            fi
            if ! pdftotext "$pdf_file" - | grep -q "[a-zA-Z]"; then
              echo "PDF file $pdf_file does not contain readable text!"
              exit 1
            fi
          done
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-output
          path: /tmp/integration-test/output/