name: Convert SVG to PDF

on:
  push:
    paths:
      - 'decks/**/*.svg'
  workflow_dispatch:
    inputs:
      deck_name:
        description: 'Name of the deck to process (e.g., "deck1"). Leave empty to process all decks.'
        required: false
        type: string

jobs:
  convert-svg:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get files to process
        id: files-to-process
        if: github.event_name == 'push'
        uses: tj-actions/changed-files@v46
        with:
          files: |
            decks/**/*.svg

      - name: Set files to process for manual run
        if: github.event_name == 'workflow_dispatch'
        run: |
          if [ -n "${{ github.event.inputs.deck_name }}" ]; then
            echo "all_changed_files=$(find decks/${{ github.event.inputs.deck_name }} -name '*.svg' | tr '\n' ' ')" >> $GITHUB_OUTPUT
          else
            echo "all_changed_files=$(find decks -name '*.svg' | tr '\n' ' ')" >> $GITHUB_OUTPUT
          fi
          echo "any_changed=true" >> $GITHUB_OUTPUT

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Convert SVG to PDF
        if: steps.files-to-process.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch'
        run: |
          # Function to get SVG files based on event type
          get_svg_files() {
            if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
              if [ -n "${{ github.event.inputs.deck_name }}" ]; then
                find decks/${{ github.event.inputs.deck_name }} -name '*.svg'
              else
                find decks -name '*.svg'
              fi
            else
              echo "${{ steps.files-to-process.outputs.all_changed_files }}"
            fi
          }

          # Function to convert SVG to PDF
          convert_svg_to_pdf() {
            local svg_file="$1"
            local filename=$(basename "$svg_file" .svg)
            local qr_path=$(dirname "$svg_file")/${filename%-output}-qr.png
            local temp_svg="/tmp/${filename}.svg"
            local pdf_output="$(dirname "$svg_file")/${filename}.pdf"

            # Check if QR code exists
            if [ -f "$qr_path" ]; then
              # Get absolute path of QR code
              local abs_qr_path=$(realpath "$qr_path")
              # Create temporary SVG with local QR code path
              sed "s|https://blog.session.it/quiz/decks/devops-hero/questions/${filename%-output}-qr.png|file://$abs_qr_path|g" "$svg_file" > "$temp_svg"
              
              # Convert with QR code
              docker run --rm \
                -v "$PWD:/work" \
                -v "/tmp:/tmp" \
                -w /work \
                ghcr.io/${{ github.repository }}/svg-to-pdf:latest \
                rsvg-convert -f pdf \
                  -o "$pdf_output" \
                  -w 416 \
                  -h 416 \
                  "$temp_svg"
              
              # Clean up temporary file
              rm "$temp_svg"
            else
              echo "Warning: QR code file not found: $qr_path"
              # Convert without QR code
              docker run --rm \
                -v "$PWD:/work" \
                -w /work \
                ghcr.io/${{ github.repository }}/svg-to-pdf:latest \
                rsvg-convert -f pdf \
                  -o "$pdf_output" \
                  -w 416 \
                  -h 416 \
                  "$svg_file"
            fi
          }

          # Process each SVG file
          for svg_file in $(get_svg_files); do
            if [ -f "$svg_file" ] && [[ "$svg_file" == *.svg ]]; then
              convert_svg_to_pdf "$svg_file"
            fi
          done

      - name: Commit and push changes
        if: steps.files-to-process.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add decks/*.pdf
          git commit -m "Convert SVG to PDF" || exit 0
          git push origin HEAD:${{ github.ref }} 