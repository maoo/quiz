name: Test

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'scripts/**'
      - 'tests/**'
      - 'pyproject.toml'
      - 'poetry.lock'
      - '.github/workflows/test.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'scripts/**'
      - 'tests/**'
      - 'pyproject.toml'
      - 'poetry.lock'
      - '.github/workflows/test.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Checkout branches
        uses: ./.github/actions/checkout-branches
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup Python and Poetry
        uses: ./.github/actions/setup-python-poetry
        with:
          python-version: '3.11'
      - name: Install dependencies
        uses: ./.github/actions/install-dependencies
        with:
          use-cache: 'true'
      - name: Run Python tests
        run: |
          poetry run pytest --cov=src --cov-report=xml
      - name: Install poppler-utils (for pdftotext)
        run: |
          sudo apt-get update && sudo apt-get install -y poppler-utils
      - name: Run integration test
        run: |
          chmod +x scripts/test_integration.sh
          ./scripts/test_integration.sh
      - name: Run type checking
        run: poetry run mypy src
      # - name: Upload coverage
      #   uses: codecov/codecov-action@v3
      #   with:
      #     file: ./coverage.xml
      #     fail_ci_if_error: true
      # - name: Run linting
      #   run: |
      #     poetry run black --check src tests
      #     poetry run isort --check-only src tests
      #     poetry run flake8 src tests 